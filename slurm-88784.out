/var/spool/slurmd/job88784/slurm_script: line 14: /home/ext-6401/anaconda3/bin/conda: No such file or directory
/var/spool/slurmd/job88784/slurm_script: line 15: /home/ext-6401/anaconda3/bin/conda: No such file or directory
Let's use 2 GPUs!
Number of test files: 100
Number of batches in test_ldr: 100
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:02<04:54,  2.98s/it]  2%|▏         | 2/100 [00:04<03:45,  2.30s/it]  3%|▎         | 3/100 [00:06<03:11,  1.98s/it]  4%|▍         | 4/100 [00:10<04:41,  2.93s/it]  5%|▌         | 5/100 [00:13<04:22,  2.76s/it]  6%|▌         | 6/100 [00:15<04:00,  2.56s/it]  7%|▋         | 7/100 [00:17<03:38,  2.35s/it]  8%|▊         | 8/100 [00:19<03:33,  2.32s/it]  9%|▉         | 9/100 [00:21<03:29,  2.31s/it] 10%|█         | 10/100 [00:24<03:28,  2.31s/it] 11%|█         | 11/100 [00:26<03:17,  2.22s/it] 12%|█▏        | 12/100 [00:28<03:17,  2.25s/it] 13%|█▎        | 13/100 [00:30<03:19,  2.30s/it] 14%|█▍        | 14/100 [00:33<03:34,  2.49s/it] 15%|█▌        | 15/100 [00:35<03:15,  2.30s/it] 16%|█▌        | 16/100 [00:37<03:07,  2.23s/it] 17%|█▋        | 17/100 [00:39<02:56,  2.13s/it] 18%|█▊        | 18/100 [00:41<02:51,  2.09s/it] 19%|█▉        | 19/100 [00:43<02:47,  2.07s/it] 20%|██        | 20/100 [00:45<02:45,  2.07s/it] 21%|██        | 21/100 [00:48<02:47,  2.12s/it] 22%|██▏       | 22/100 [00:50<02:42,  2.08s/it] 23%|██▎       | 23/100 [00:52<02:44,  2.13s/it] 24%|██▍       | 24/100 [00:55<02:58,  2.35s/it] 25%|██▌       | 25/100 [00:57<02:54,  2.32s/it] 26%|██▌       | 26/100 [00:59<02:40,  2.17s/it] 27%|██▋       | 27/100 [01:00<02:29,  2.05s/it] 28%|██▊       | 28/100 [01:02<02:23,  1.99s/it] 29%|██▉       | 29/100 [01:05<02:27,  2.07s/it] 30%|███       | 30/100 [01:06<02:18,  1.97s/it] 31%|███       | 31/100 [01:08<02:16,  1.98s/it] 32%|███▏      | 32/100 [01:10<02:15,  1.99s/it] 33%|███▎      | 33/100 [01:12<02:09,  1.94s/it] 34%|███▍      | 34/100 [01:14<02:08,  1.95s/it] 35%|███▌      | 35/100 [01:16<02:11,  2.02s/it] 36%|███▌      | 36/100 [01:18<02:08,  2.00s/it] 37%|███▋      | 37/100 [01:21<02:11,  2.09s/it] 38%|███▊      | 38/100 [01:22<02:04,  2.01s/it] 39%|███▉      | 39/100 [01:24<01:57,  1.93s/it] 40%|████      | 40/100 [01:26<01:48,  1.82s/it] 41%|████      | 41/100 [01:28<01:51,  1.89s/it] 42%|████▏     | 42/100 [01:29<01:44,  1.81s/it] 43%|████▎     | 43/100 [01:31<01:44,  1.83s/it] 44%|████▍     | 44/100 [01:33<01:44,  1.87s/it] 45%|████▌     | 45/100 [01:36<01:51,  2.03s/it] 46%|████▌     | 46/100 [01:39<02:11,  2.43s/it] 47%|████▋     | 47/100 [01:41<02:06,  2.39s/it] 48%|████▊     | 48/100 [01:43<01:51,  2.14s/it] 49%|████▉     | 49/100 [01:45<01:47,  2.10s/it] 50%|█████     | 50/100 [01:47<01:43,  2.08s/it] 51%|█████     | 51/100 [01:49<01:36,  1.98s/it] 52%|█████▏    | 52/100 [01:51<01:37,  2.03s/it] 53%|█████▎    | 53/100 [01:53<01:37,  2.08s/it] 54%|█████▍    | 54/100 [01:55<01:36,  2.09s/it] 55%|█████▌    | 55/100 [01:57<01:34,  2.11s/it] 56%|█████▌    | 56/100 [01:59<01:29,  2.04s/it] 57%|█████▋    | 57/100 [02:01<01:27,  2.04s/it] 58%|█████▊    | 58/100 [02:04<01:30,  2.16s/it] 59%|█████▉    | 59/100 [02:06<01:26,  2.12s/it] 60%|██████    | 60/100 [02:08<01:24,  2.11s/it] 61%|██████    | 61/100 [02:10<01:21,  2.10s/it] 62%|██████▏   | 62/100 [02:12<01:20,  2.13s/it] 63%|██████▎   | 63/100 [02:14<01:17,  2.09s/it] 64%|██████▍   | 64/100 [02:16<01:15,  2.09s/it] 65%|██████▌   | 65/100 [02:18<01:15,  2.16s/it] 66%|██████▌   | 66/100 [02:20<01:11,  2.09s/it] 67%|██████▋   | 67/100 [02:22<01:09,  2.10s/it] 68%|██████▊   | 68/100 [02:25<01:08,  2.15s/it] 69%|██████▉   | 69/100 [02:26<01:02,  2.03s/it] 70%|███████   | 70/100 [02:29<01:02,  2.09s/it] 71%|███████   | 71/100 [02:30<00:56,  1.95s/it] 72%|███████▏  | 72/100 [02:32<00:53,  1.90s/it] 73%|███████▎  | 73/100 [02:35<00:59,  2.19s/it] 74%|███████▍  | 74/100 [02:37<00:56,  2.18s/it] 75%|███████▌  | 75/100 [02:39<00:53,  2.13s/it] 76%|███████▌  | 76/100 [02:41<00:48,  2.01s/it] 77%|███████▋  | 77/100 [02:43<00:45,  1.97s/it] 78%|███████▊  | 78/100 [02:44<00:41,  1.89s/it] 79%|███████▉  | 79/100 [02:46<00:40,  1.94s/it] 80%|████████  | 80/100 [02:48<00:36,  1.85s/it] 81%|████████  | 81/100 [02:50<00:35,  1.85s/it] 82%|████████▏ | 82/100 [02:52<00:35,  1.98s/it] 83%|████████▎ | 83/100 [02:54<00:33,  1.96s/it] 84%|████████▍ | 84/100 [02:56<00:32,  2.01s/it] 85%|████████▌ | 85/100 [02:59<00:31,  2.12s/it] 86%|████████▌ | 86/100 [03:01<00:30,  2.19s/it] 87%|████████▋ | 87/100 [03:03<00:28,  2.22s/it] 88%|████████▊ | 88/100 [03:05<00:25,  2.11s/it] 89%|████████▉ | 89/100 [03:07<00:22,  2.05s/it] 90%|█████████ | 90/100 [03:09<00:21,  2.13s/it] 91%|█████████ | 91/100 [03:12<00:19,  2.15s/it] 92%|█████████▏| 92/100 [03:13<00:16,  2.06s/it] 93%|█████████▎| 93/100 [03:16<00:15,  2.15s/it] 94%|█████████▍| 94/100 [03:18<00:12,  2.09s/it] 95%|█████████▌| 95/100 [03:20<00:10,  2.14s/it] 96%|█████████▌| 96/100 [03:22<00:08,  2.11s/it] 97%|█████████▋| 97/100 [03:24<00:06,  2.01s/it] 98%|█████████▊| 98/100 [03:26<00:03,  1.98s/it] 99%|█████████▉| 99/100 [03:28<00:01,  1.92s/it]100%|██████████| 100/100 [03:30<00:00,  1.96s/it]100%|██████████| 100/100 [03:30<00:00,  2.10s/it]
Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/ssd/ext-6401/PSCC-IPParis-Challenge/src/predict.py", line 85, in <module>
    result = submission_gen(save_directory, csvpath)
  File "/home/ssd/ext-6401/PSCC_datachallenge/hackathon/submission_gen.py", line 25, in submission_gen
    img = nib.load(file)
  File "/home/ids/ext-6401/.local/lib/python3.10/site-packages/nibabel/loadsave.py", line 117, in load
    raise ImageFileError(f'Cannot work out file type of "{filename}"')
nibabel.filebasedimages.ImageFileError: Cannot work out file type of "/home/ssd/ext-6401/PSCC-IPParis-Challenge/predictions/3DUnet_0/output.csv"
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
torch.Size([1, 1, 256, 256, 128])
(256, 256, 128)
cbon
Encoding /home/ssd/ext-6401/PSCC-IPParis-Challenge/predictions/3DUnet_0/LUNG1-.nii.gz...
Encoding /home/ssd/ext-6401/PSCC-IPParis-Challenge/predictions/3DUnet_0/output.csv...
